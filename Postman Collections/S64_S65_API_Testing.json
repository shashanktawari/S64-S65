{
	"info": {
		"_postman_id": "1da26f65-2f2a-4bb8-b22b-eb95c7852f90",
		"name": "Combined API Tests Collection Copy 3",
		"description": "This collection combines tests from multiple collections.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Track Account list",
			"item": [
				{
					"name": "http://localhost:8080/v2/clients",
					"id": "6eff6a0a-08cd-4da4-98be-dff73accfe97",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJydWNoaXRhLmJoYW5kYXJlQHNtYXJ0ZWluYy5jb20iLCJ1c2VySWQiOjIsImNsaWVudElkIjoxLCJpc3MiOiJodHRwOi8vMTkyLjE2OC4xNS41OjgxMDAvL3YxL2FjY291bnRzL2xvZ2luIiwiaWF0IjoxNzUxNDU2NTY2LCJhdXRob3JpdGllcyI6WyJTdXBlciBBZG1pbiJdLCJwZXJtaXNzaW9ucyI6WyJFbWFpbCBJZCIsIkNSRUFURV9DTElFTlRfQUNDT1VOVCIsIlZJRVdfQ0xJRU5UX0FDQ09VTlQiXSwibGlzdE9mUHJvZHVjdHMiOlsiRW5yaWNoIE9uRGVtYW5kIl0sImV4cCI6MTc1MTQ2MDE2Nn0.nyu9cHhEeY3EVK0w_E8miV6MFAAGoa9iXbVLae01sGI"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"adminEmail\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"adminFirstName\": \"vyankatesh\",\r\n    \"adminLastName\": \"Poojari\",\r\n    \"allowedroleid\": 9,\r\n    \"clientName\": \"shashank\",\r\n    \"expiryDate\": \"2025-08-30T11:16:13.806Z\",\r\n    \"startDate\": \"2025-07-02T11:16:11.875Z\",\r\n    \"adminUsername\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"roleAssigned\": 8,\r\n    \r\n    \"directDialAccess\": false,\r\n    \"emailRefresherAccess\": true,\r\n    \"clientType\": \"Regular\",\r\n    \"selectedProduct\": [\r\n        1,\r\n        2\r\n    ],\r\n    \"licenses\": [\r\n        {\r\n            \"licenseCount\": \"2\",\r\n            \"licenseTypeName\": \"Hunter\"\r\n        }\r\n    ],\r\n    \"subscriptionType\": \"Enterprise Standard\",\r\n    \"rateLimit\": 1,\r\n    \"accountLimit\": 10,\r\n    \"leadLimit\": 2,\r\n    \"access\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/v2/clients",
						"description": "Generated from cURL: curl --location 'http://localhost:8080/v2/clients' \\\r\n--header 'Content-Type: application/json' \\\r\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJydWNoaXRhLmJoYW5kYXJlQHNtYXJ0ZWluYy5jb20iLCJ1c2VySWQiOjIsImNsaWVudElkIjoxLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvdjEvYWNjb3VudHMvbG9naW4iLCJpYXQiOjE3NTEzNjYwMjAsImF1dGhvcml0aWVzIjpbIlN1cGVyIEFkbWluIl0sInBlcm1pc3Npb25zIjpbIkVtYWlsIElkIiwiQ1JFQVRFX0NMSUVOVF9BQ0NPVU5UIiwiVklFV19DTElFTlRfQUNDT1VOVCJdLCJsaXN0T2ZQcm9kdWN0cyI6WyJFbnJpY2ggT25EZW1hbmQiXSwiZXhwIjoxNzUxMzY5NjIwfQ.CBBzlHY8qPoU1Lfa6cO9JsEbEL0iGjmyo8yKXi1k4vE' \\\r\n--data-raw '{\r\n    \"adminEmail\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"adminFirstName\": \"vyankatesh\",\r\n    \"adminLastName\": \"Poojari\",\r\n    \"allowedroleid\": 9,\r\n    \"clientName\": \"venky7a790\",\r\n    \"expiryDate\": \"2025-07-30T11:16:13.806Z\",\r\n    \"startDate\": \"2025-06-29T11:16:11.875Z\",\r\n    \"adminUsername\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"roleAssigned\": 8,\r\n    \r\n    \"directDialAccess\": false,\r\n    \"emailRefresherAccess\": true,\r\n    \"clientType\": \"Regular\",\r\n    \"selectedProduct\": [\r\n        1,\r\n        2\r\n    ],\r\n    \"licenses\": [\r\n        {\r\n            \"licenseCount\": \"2\",\r\n            \"licenseTypeName\": \"Hunter\"\r\n        }\r\n    ],\r\n    \"subscriptionType\": \"Enterprise Standard\",\r\n    \"rateLimit\": 1,\r\n    \"accountLimit\": 10,\r\n    \"leadLimit\": 2,\r\n    \"access\": true\r\n}'"
					},
					"response": []
				},
				{
					"name": "superadminlogin",
					"id": "f3f55f1b-98f9-4fcb-a7e7-b1e355c36610",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userName\": \"ruchita.bhandare@smarteinc.com\",\n    \"password\": \"Admin@12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}v1/accounts/login",
						"description": "Generated from cURL: curl --location 'http://localhost:8080/v1/accounts/login' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"userName\": \"ruchita.bhandare@smarteinc.com\",\n    \"password\": \"Admin@12345\"\n}'"
					},
					"response": []
				},
				{
					"name": "List tracked- True",
					"id": "3e90df00-5dd3-4860-a8c3-d33c02ea4003",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"id\": 1250,\r\n        \"isTrack\": \"true\"\r\n    }\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}customer-list/v1/account-list/track-untrack-account-list"
					},
					"response": []
				},
				{
					"name": "List tracked- fulse",
					"id": "d9c79b22-8ca4-44ff-8b97-754a720790f3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"id\": 1250,\r\n        \"isTrack\": \"fulse\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}customer-list/v1/account-list/track-untrack-account-list"
					},
					"response": []
				},
				{
					"name": "New Request",
					"id": "bb482673-d756-4af6-be66-59011992fda6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n             \"id\": 1250,\r\n            \"listName\": \"shashank\",\r\n            \"guids\": [\r\n              \"53A15A01E32C8428\"\r\n            ],\r\n            \"type\": \"HANDPICKED\",\r\n            \"isTrack\": \"true\",\r\n            \"isDefaultTrack\": \"false\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}customer-list/v1/account-list/account-list-save"
					},
					"response": []
				}
			],
			"id": "fc09affe-0980-41fe-bcc3-8d02110b1958"
		},
		{
			"name": "Subscribe API",
			"item": [
				{
					"name": "TC1 - Happy Path (New Domain)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78afeb80-90d9-47ac-bfe1-70b411af8481",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "81cf7589-4e55-45c4-9f95-ec1d38bfadcd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Api-Key",
								"value": "1TGJs1l2zJ7UXkvQjJx+JacOonww7TcQ93Vu1R2qQHw="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comp_url\": \"amazon.com\",\n  \"comp_guid\": \"53A15A01E32C8428\"\n}"
						},
						"url": "https://signals.smarte.pro/signals/domains/subscribe"
					},
					"response": []
				},
				{
					"name": "TC2 - Already Subscribed Domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"id": "6023287f-11ca-4227-bae2-39fd08c303ce"
							}
						}
					],
					"id": "6929ecde-ae53-4bbc-8706-de97eb965873",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comp_url\": \"google.com\",\n  \"comp_guid\": \"195E756C4C6F25C1\"\n}"
						},
						"url": "https://signals.smarte.pro/signals/domains/subscribe"
					},
					"response": []
				},
				{
					"name": "TC3 - Invalid Domain (No TLD)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"id": "43f612db-83de-4892-8e2f-2a0ff7f71da9"
							}
						}
					],
					"id": "c1666000-390a-4443-af9d-18c6eec4a95b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comp_url\": \"invalid_domain\",\n  \"comp_guid\": \"195E756C4C6F25C1\"\n}"
						},
						"url": "https://signals.smarte.pro/signals/domains/subscribe"
					},
					"response": []
				},
				{
					"name": "TC4 - Missing comp_guid",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"id": "ae7214a1-a58e-4c5d-bbf4-c8fd95c1bc89"
							}
						}
					],
					"id": "8b205b4c-9696-48f2-b543-db5016fd91a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comp_url\": \"example.com\"\n}"
						},
						"url": "https://signals.smarte.pro/signals/domains/subscribe"
					},
					"response": []
				},
				{
					"name": "TC5 - Empty Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"id": "bf47bbd7-cbf6-4165-8f57-20c6da479a1c"
							}
						}
					],
					"id": "658f1548-2ecc-480f-bacc-93ec8d33451d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": "https://signals.smarte.pro/signals/domains/subscribe"
					},
					"response": []
				}
			],
			"id": "f56ebc8d-156a-4122-b03e-fb70d1c582dc"
		},
		{
			"name": "Signals API",
			"item": [
				{
					"name": "TC1 - Happy Path",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', () => pm.response.to.have.status(200));",
									"pm.test('Contains signals', () => pm.expect(pm.response.json().data.signals).to.be.an('object'));",
									"pm.test('Contains trackList as true', () => pm.expect(pm.response.json().data.trackList).to.eql(true));"
								],
								"type": "text/javascript",
								"id": "93453f41-fbba-4e7a-8854-e39ef1506da2"
							}
						}
					],
					"id": "f7da5a51-d197-475f-a436-6f51df0f7eb1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"compGuid\": \"EF06CFABB9D847E9\",\n    \"categoryIds\": [15]\n  }\n}"
						},
						"url": "{{baseUrl}}/customer-list/v1/account-signal/signals"
					},
					"response": []
				},
				{
					"name": "TC2 - Invalid compGuid Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"id": "843a95f4-48c4-4fb5-b9e1-8699ad905f33"
							}
						}
					],
					"id": "072a1197-9228-48ba-a9d9-58449e852d77",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"compGuid\": \"123\",\n    \"categoryIds\": [15]\n  }\n}"
						},
						"url": "{{baseUrl}}/customer-list/v1/account-signal/signals"
					},
					"response": []
				},
				{
					"name": "TC3 - Missing categoryIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5706c986-94e8-49f4-b3dc-a822b62084af",
								"exec": [
									"// ✅ Status Code Check",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// ✅ Response Time Check",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"// ✅ Content-Type Check (case-insensitive match for safety)",
									"pm.test('Content-Type is application/json', function () {",
									"    const contentType = pm.response.headers.get('Content-Type');",
									"    pm.expect(contentType).to.include('application/json');",
									"});",
									"",
									"// ✅ Valid JSON Structure Check (with try-catch for safety)",
									"pm.test('Response has valid JSON structure', function () {",
									"    let jsonData;",
									"    try {",
									"        jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.be.an('object');",
									"    } catch (e) {",
									"        pm.expect.fail('Response is not a valid JSON: ' + e.message);",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f6e9372e-8995-4061-9e7c-ba773e1d7a82",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"compGuid\": \"EF06CFABB9D847E9\"\n  }\n}"
						},
						"url": "{{baseUrl}}/customer-list/v1/account-signal/signals"
					},
					"response": []
				},
				{
					"name": "TC4 - Empty categoryIds array",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"id": "ab4c5b89-06ea-47eb-8273-cdd496dbf707"
							}
						}
					],
					"id": "0f16b772-956f-4e31-993c-36ab3159882c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"compGuid\": \"EF06CFABB9D847E9\",\n    \"categoryIds\": []\n  }\n}"
						},
						"url": "{{baseUrl}}/customer-list/v1/account-signal/signals"
					},
					"response": []
				},
				{
					"name": "TC5 - Large categoryIds array",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"id": "b71cf3c6-8542-49f4-bb6f-8e419e9ea78d"
							}
						}
					],
					"id": "d8cf485c-9b6b-41ca-b0ae-aea524a2b7cf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"compGuid\": \"EF06CFABB9D847E9\",\n    \"categoryIds\": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n  }\n}"
						},
						"url": "{{baseUrl}}/customer-list/v1/account-signal/signals"
					},
					"response": []
				},
				{
					"name": "TC6 - Empty Request Body",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Add your test scripts here",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Response time is less than 500ms', function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"pm.test('Content-Type is application/json', function () {",
									"    pm.response.to.have.header('Content-Type', 'application/json');",
									"});",
									"pm.test('Response has valid JSON structure', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});"
								],
								"id": "e44b401a-5203-4afe-a9a6-0d58a935b307"
							}
						}
					],
					"id": "d5f7f949-1321-4aa6-bb85-e34a71c2055f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": "{{baseUrl}}/customer-list/v1/account-signal/signals"
					},
					"response": []
				}
			],
			"id": "2be69313-78f6-4b14-bbe5-629336b0d8e9"
		},
		{
			"name": "CategoryByGuid Tests",
			"item": [
				{
					"name": "TC1 - Valid GUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "065e9170-cbd9-422e-9385-64cab43fc4a6",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "b6e1963d-e87d-496f-9bfe-eaaaa8e3e8eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"compGuid\": \"53A15A01E32C8428\"\r\n       // B1E5F3A4C2794017\r\n    }\r\n}"
						},
						"url": "{{baseUrl}}customer-list/v1/account-signal/signal-category-by-guid"
					},
					"response": []
				},
				{
					"name": "TC2 - Missing GUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46307ddd-7ad5-40c7-9944-1f007050d43e",
								"exec": [
									"pm.test('400 Bad Request or 422 Unprocessable', ()=>pm.expect([400,422]).to.include(pm.response.code));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9d9cdbbe-5c3c-467f-a90e-12aa569a9d63",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": "{{baseUrl}}customer-list/v1/account-signal/signal-category-by-guid"
					},
					"response": []
				},
				{
					"name": "TC3 - Invalid GUID Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "606caf4e-43ca-4c6c-a312-f740ffc9e81b",
								"exec": [
									"pm.test('400 violation', ()=>pm.expect(pm.response.code).to.eql(400));",
									"pm.test('error message mentions GUID', ()=>pm.expect(pm.response.text().toLowerCase()).to.include('guid'));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a5636e8b-86e5-4a55-b201-40c3355f62d4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"compGuid\": \"XYZ\"\r\n       // B1E5F3A4C2794017\r\n    }\r\n}"
						},
						"url": "{{baseUrl}}customer-list/v1/account-signal/signal-category-by-guid"
					},
					"response": []
				}
			],
			"id": "766faa32-5b8a-425a-ab25-f8ec7c3cb2ea"
		},
		{
			"name": "AdvancedSearch Tests",
			"item": [
				{
					"name": "TC1 - Valid search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cb21cd1-8b54-4743-871f-1b425d307998",
								"exec": [
									"pm.test('200 & Success message', ()=>{ pm.response.to.have.status(200); let j=pm.response.json(); pm.expect(j.status.statusCode).to.eql(200); pm.expect(j.status.message).to.eql('Success'); });",
									"pm.test('Non-empty results', ()=>{ let d=pm.response.json().data; pm.expect(d.length).to.be.above(0); d.forEach(o=>{ pm.expect(o).to.have.property('pc_con_guid'); pm.expect(o).to.have.property('rc_con_email_addr_drv'); }); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "87d4a33b-60d2-46be-83bd-b20b9317f865",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"search_text\": {\r\n            \"type\": \"COMPANY\",\r\n            \"value\": \"ma\"\r\n        },\r\n        \"company_filters\": {\r\n            \"company_lists\": {\r\n                \"type\": \"INCLUDE\",\r\n                \"guids\": [],\r\n                \"names\": [],\r\n                \"ids\": []\r\n            },\r\n\t\t\t \"company_signals\": {\r\n                \"type\": \"INCLUDE\",\r\n                \"guids\": [\"EBEFDA66289B434E\"],\r\n                \"names\": [],\r\n                \"ids\": []\r\n            },\r\n            \"company_attributes\": {\r\n                \"employee_size\": {\r\n                    \"size_type\": \"FIXED_RANGE\",\r\n                    \"fixed_range\": [],\r\n                    \"custom_range\": []\r\n                },\r\n                \"revenue\": {\r\n                    \"revenue_type\": \"FIXED_RANGE\",\r\n                    \"fixed_range\": [],\r\n                    \"custom_range\": []\r\n                },\r\n                \"relation\": \"OR\"\r\n            },\r\n            \"entity_type\": {\r\n                \"type\": \"\",\r\n                \"values\": []\r\n            },\r\n            \"industry\": {\r\n                \"type\": \"INCLUDE\",\r\n                \"values\": [],\r\n                \"names\": []\r\n            },\r\n            \"region\": {\r\n                \"type\": \"\",\r\n                \"regions\": [],\r\n                \"countries\": [],\r\n                \"zipcodes\": [],\r\n                \"states\": []\r\n            },\r\n            \"techno_graphics\": {\r\n                \"type\": \"\",\r\n                \"values\": {\r\n                    \"PRODUCT\": [],\r\n                    \"VENDOR\": [],\r\n                    \"CATEGORY\": []\r\n                },\r\n                \"displayNames\": {\r\n                    \"PRODUCT\": [],\r\n                    \"VENDOR\": [],\r\n                    \"CATEGORY\": []\r\n                }\r\n            },\r\n            \"keywords\": {\r\n                \"type\": \"\",\r\n                \"includes\": [],\r\n                \"excludes\": []\r\n            },\r\n            \"type\": \"company\",\r\n            \"personas\": []\r\n        },\r\n        \"contact_filters\": {\r\n            \"level\": {\r\n                \"type\": \"level\",\r\n                \"values\": []\r\n            },\r\n            \"keywords\": {\r\n                \"type\": \"CURRENT_JOB_TITLE\",\r\n                \"includes\": [],\r\n                \"excludes\": []\r\n            },\r\n            \"job_change\": {\r\n                \"type\": \"jobchangecriteria\"\r\n            },\r\n            \"functions\": {\r\n                \"type\": \"functions\",\r\n                \"values\": []\r\n            },\r\n            \"workLocationRegion\": {\r\n                \"type\": \"\",\r\n                \"regions\": [],\r\n                \"countries\": [],\r\n                \"zipcodes\": [],\r\n                \"states\": []\r\n            },\r\n            \"accuracy\": {\r\n                \"type\": \"\",\r\n                \"accuracyValues\": [\r\n                    \"A_PLUS\",\r\n                    \"A\"\r\n                ]\r\n            },\r\n            \"type\": \"contact\"\r\n        },\r\n        \"personaMetadata\": {},\r\n        \"company_personas\": [],\r\n        \"contact_personas\": [],\r\n        \"pagination\": {\r\n            \"page_size\": \"10\",\r\n            \"page_no\": \"1\"\r\n        }\r\n    },\r\n    \"type\": \"ADVANCED_SEARCH_COMPANY\"\r\n}"
						},
						"url": "{{baseUrl}}search/v2/advanced-search"
					},
					"response": []
				},
				{
					"name": "TC2 - Empty search text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('400 or no results', ()=>{ pm.expect([200,400]).to.include(pm.response.code); if(pm.response.code===200){ pm.expect(pm.response.json().data.length).to.eql(0); } });"
								],
								"type": "text/javascript",
								"id": "ea2061b7-e126-41c7-810f-6c2d9e79bbf8"
							}
						}
					],
					"id": "cc4c46a4-ae82-49eb-8ee6-e95d7a4a0691",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"data\": { \"search_text\": {\"type\":\"COMPANY\",\"value\":\"\"}, \"pagination\":{\"page_size\":\"5\",\"page_no\":\"1\"} }, \"type\":\"ADVANCED_SEARCH_COMPANY\" }"
						},
						"url": ""
					},
					"response": []
				},
				{
					"name": "TC3 - Invalid payload structure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('400 Bad Request', ()=>pm.response.to.have.status(400));"
								],
								"type": "text/javascript",
								"id": "5c19bb6d-dc90-4c8c-a2cd-6b23d98719b1"
							}
						}
					],
					"id": "0e2f132c-a11b-4678-a736-13fe82613ced",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"foo\": \"bar\" }"
						},
						"url": ""
					},
					"response": []
				}
			],
			"id": "94a82bac-2c22-423a-bbfe-057297995ad7"
		},
		{
			"name": "Publish (UDI API)",
			"item": [
				{
					"name": "TC1 - Happy Path (Valid Domain: google.com)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', () => pm.response.to.have.status(200));",
									"pm.test('Response time < 1000ms', () => pm.expect(pm.response.responseTime).to.be.below(1000));",
									"pm.test('Body contains expected fields', () => {",
									"    const json = pm.response.json();",
									"    pm.expect(json).to.be.an('object');",
									"    pm.expect(json).to.have.any.keys('news', 'events');",
									"});"
								],
								"type": "text/javascript",
								"id": "495ca5c0-7268-4f78-af32-d5440f07d1c5"
							}
						}
					],
					"id": "5e426aab-4cde-4731-b269-9dabaf551539",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": "https://signals.smarte.pro/api/v1/companies/google.com/publish/news_events"
					},
					"response": []
				},
				{
					"name": "TC2 - Invalid Domain (Missing TLD)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 400 or 404', () => pm.expect([400, 404]).to.include(pm.response.code));"
								],
								"type": "text/javascript",
								"id": "59ff01ad-da54-44cb-9448-bb8c970123e2"
							}
						}
					],
					"id": "abf764af-b247-4b87-b807-e4c962b4286f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": "https://signals.smarte.pro/api/v1/companies/google/publish/news_events"
					},
					"response": []
				},
				{
					"name": "TC3 - Nonexistent Domain (foobar-does-not-exist.com)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 404 for unknown domain', () => pm.response.to.have.status(404));",
									"pm.test('Message says not found', () => pm.expect(pm.response.text().toLowerCase()).to.include('not found'));"
								],
								"type": "text/javascript",
								"id": "84aa403b-bcef-4a52-8b64-a8c0d29c85d0"
							}
						}
					],
					"id": "ea5fe1cd-c7e2-4e63-8380-212789a48d2c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": "https://signals.smarte.pro/api/v1/companies/foobar-does-not-exist.com/publish/news_events"
					},
					"response": []
				},
				{
					"name": "TC4 - Empty Domain in Path",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should return 404 or 400', () => pm.expect([400,404]).to.include(pm.response.code));"
								],
								"type": "text/javascript",
								"id": "1b7f834c-dd50-45f3-8cf3-381a50564bf3"
							}
						}
					],
					"id": "67462118-f115-46c4-af6d-dbbbb5251c8b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": "https://signals.smarte.pro/api/v1/companies//publish/news_events"
					},
					"response": []
				},
				{
					"name": "TC5 - Domain with Special Characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 400 or 422 for invalid domain characters', () => pm.expect([400,422]).to.include(pm.response.code));"
								],
								"type": "text/javascript",
								"id": "28a181a5-ab37-4fd5-bdd6-42fe88ccd3be"
							}
						}
					],
					"id": "de1128d1-e804-4d65-981a-d29ca82c3e8b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{auth_token}}"
							}
						],
						"url": "https://signals.smarte.pro/api/v1/companies/!@#$%25/publish/news_events"
					},
					"response": []
				}
			],
			"id": "bd44bbc5-a350-4dd2-bd4e-d14eaaa940aa"
		},
		{
			"name": "Contact Reveal (DD Test)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Response statusCode is 200\", () => {",
							"    pm.expect(jsonData.status.statusCode).to.eql(200);",
							"});",
							"",
							"pm.test(\"RequestId is present and non-empty\", () => {",
							"    pm.expect(jsonData.status.requestId).to.be.a('string').and.to.have.length.above(0);",
							"});",
							"",
							"pm.test(\"Message indicates success\", () => {",
							"    pm.expect(jsonData.status.message.toLowerCase()).to.include('success');",
							"});",
							"",
							"pm.test(\"Data contains entry for given conGuid\", () => {",
							"    pm.expect(jsonData.data).to.have.property(pm.variables.get('conGuid'));",
							"});",
							"",
							"const contactData = jsonData.data[pm.variables.get('conGuid')];",
							"pm.test(\"Contact data has status true and message Match Found\", () => {",
							"    pm.expect(contactData.status).to.be.true;",
							"    pm.expect(contactData.message).to.eql('Match Found');",
							"});",
							"",
							"pm.test(\"ContactRevealStatus should be boolean\", () => {",
							"    pm.expect(contactData.contactRevealStatus).to.be.a('boolean');",
							"});",
							"",
							"pm.test(\"RevealType is FREE or NEW\", () => {",
							"    pm.expect(['FREE','NEW']).to.include(contactData.revealType);",
							"});",
							"",
							"// Check nested objects for presence and basic validation",
							"pm.test(\"directDial object contains directDialFlag and statusCode\", () => {",
							"    pm.expect(contactData).to.have.property('directDial');",
							"    pm.expect(contactData.directDial).to.have.property('directDialFlag');",
							"    pm.expect(contactData.directDial).to.have.property('statusCode');",
							"});",
							"",
							"pm.test(\"emailRefresherResponse contains edc and status\", () => {",
							"    pm.expect(contactData).to.have.property('emailRefresherResponse');",
							"    pm.expect(contactData.emailRefresherResponse).to.have.property('edc');",
							"    pm.expect(contactData.emailRefresherResponse).to.have.property('status');",
							"});",
							"",
							"// Optional: add more deep field tests here based on your requirements"
						],
						"type": "text/javascript",
						"id": "c455da86-0d1e-4832-8fb2-46a2951c4a38"
					}
				}
			],
			"id": "e9680a87-6942-4d12-8b4a-322cd709c5ad",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": [\n    {\n      \"conGuid\": \"{{conGuid}}\",\n      \"compGuid\": \"{{compGuid}}\"\n    }\n  ],\n  \"revealSource\": \"{{revealSource}}\",\n  \"type\": \"{{typeContactReveal}}\"\n}"
				},
				"url": "{{baseUrl}}/customer-list/v2/reveal/contact-reveal"
			},
			"response": []
		},
		{
			"name": "Account Lists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Response statusCode is 200\", () => {",
							"    pm.expect(jsonData.status.statusCode).to.eql(200);",
							"});",
							"",
							"pm.test(\"RequestId is present and non-empty\", () => {",
							"    pm.expect(jsonData.status.requestId).to.be.a('string').and.to.have.length.above(0);",
							"});",
							"",
							"pm.test(\"Message indicates success\", () => {",
							"    pm.expect(jsonData.status.message.toLowerCase()).to.include('success');",
							"});",
							"",
							"pm.test(\"Account Lists array exists\", () => {",
							"    pm.expect(jsonData.data).to.have.property('accountLists');",
							"    pm.expect(jsonData.data.accountLists).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Account Lists contain expected properties\", () => {",
							"    jsonData.data.accountLists.forEach(account => {",
							"        pm.expect(account).to.have.property('id');",
							"        pm.expect(account).to.have.property('listName');",
							"        pm.expect(account).to.have.property('createdAt');",
							"        pm.expect(account).to.have.property('public');",
							"        pm.expect(account).to.have.property('tracked');",
							"    });",
							"});",
							"",
							"pm.test(\"Pagination info is correct\", () => {",
							"    pm.expect(jsonData.data).to.have.property('currentPage');",
							"    pm.expect(jsonData.data).to.have.property('total');",
							"    pm.expect(jsonData.data).to.have.property('totalPages');",
							"    pm.expect(jsonData.data.currentPage).to.eql(pm.variables.get('pageIndex'));",
							"});"
						],
						"type": "text/javascript",
						"id": "98be4c83-a5f2-4e62-ae81-38dc37dd2b2b"
					}
				}
			],
			"id": "770ed059-f05d-49d6-b9cc-326a4d0f237e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"searchText\": \"{{searchText}}\",\n    \"contentType\": \"{{contentType}}\"\n  },\n  \"type\": \"DASHBOARD\",\n  \"pagination\": {\n    \"pageSize\": {{pageSize}},\n    \"pageIndex\": {{pageIndex}}\n  }\n}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-list/account-lists"
			},
			"response": []
		},
		{
			"name": "1. Signal Category – Valid Request ({} Payload)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06875c12-89dc-4e1c-b9f3-9a8270882e82",
						"exec": [
							"// ✅ Check response status",
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// ✅ Check response time is under 500ms",
							"pm.test('Response time is under 500ms', () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"// ✅ Check Content-Type header",
							"pm.test('Content-Type is application/json', () => {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
							"});",
							"",
							"// ✅ Parse JSON safely",
							"let jsonData;",
							"pm.test('Response is valid JSON', () => {",
							"    jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('object');",
							"});",
							"",
							"// ✅ Validate root keys",
							"pm.test('Has required top-level keys', () => {",
							"    pm.expect(jsonData).to.have.property('status');",
							"    pm.expect(jsonData).to.have.property('data');",
							"});",
							"",
							"// ✅ Validate status block",
							"pm.test('Status block contains expected fields', () => {",
							"    pm.expect(jsonData.status).to.have.property('statusCode');",
							"    pm.expect(jsonData.status.statusCode).to.be.oneOf([0, 200]); // Accept common values",
							"    pm.expect(jsonData.status).to.have.property('message');",
							"    pm.expect(jsonData.status.message).to.be.a('string');",
							"});",
							"",
							"// ✅ Validate data block structure",
							"pm.test('Data block has selectedCategory and category', () => {",
							"    pm.expect(jsonData.data).to.be.an('object').that.is.not.null;",
							"    pm.expect(jsonData.data).to.have.property('selectedCategory');",
							"    pm.expect(jsonData.data).to.have.property('category');",
							"    pm.expect(jsonData.data.category).to.be.an('array');",
							"});",
							"",
							"// ✅ Optional: Validate structure of first category item (if available)",
							"if (jsonData.data.category.length > 0) {",
							"    pm.test('First category item has id and name', () => {",
							"        const first = jsonData.data.category[0];",
							"        pm.expect(first).to.be.an('object');",
							"        pm.expect(first).to.have.property('id');",
							"        pm.expect(first).to.have.property('name');",
							"    });",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "c05ed2ae-e806-4219-9af1-5db9a163ec1f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-signal/signal-category"
			},
			"response": []
		},
		{
			"name": "2. Signal Category – Invalid Payload (extra param)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Returns 200 or handles unknown keys gracefully', () => {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 400]);",
							"});"
						],
						"type": "text/javascript",
						"id": "6ac3b61b-d3c7-4b97-b436-c3e8bb6b10bb"
					}
				}
			],
			"id": "4c450d8f-e343-42ba-91fd-1335cef5aecd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"invalidKey\": \"invalidValue\"\n}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-signal/signal-category"
			},
			"response": []
		},
		{
			"name": "3. Signal Category – Malformed JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Returns 400 or 500 for malformed JSON', () => {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 500]);",
							"});"
						],
						"type": "text/javascript",
						"id": "bbee52d4-bd53-4fd9-a567-080e0b4dc835"
					}
				}
			],
			"id": "ec40eb55-9414-45ad-a1fe-b057427f53d5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ invalid json"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-signal/signal-category"
			},
			"response": []
		},
		{
			"name": "4. Signal Category – Invalid Content-Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Should handle unsupported media type', () => {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 415, 200]);",
							"});"
						],
						"type": "text/javascript",
						"id": "30b4a812-91a8-4dc3-9459-8a5bae6bdecc"
					}
				}
			],
			"id": "28b5e3f4-586b-4c42-a4b5-4c2018423272",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-signal/signal-category"
			},
			"response": []
		},
		{
			"name": "5. Signal Category – Simulated Long Response",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Warn if response time exceeds 1000ms', () => {",
							"    if (pm.response.responseTime > 1000) {",
							"        console.warn('⚠️ Slow response:', pm.response.responseTime + 'ms');",
							"    }",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});"
						],
						"type": "text/javascript",
						"id": "766456d9-a355-4c1b-8076-92f251c17af5"
					}
				}
			],
			"id": "56037a96-e09f-47fe-8237-8c33d38284a1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-signal/signal-category"
			},
			"response": []
		},
		{
			"name": "Lead Lists - Valid Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response has leadLists array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.have.property('leadLists');",
							"    pm.expect(jsonData.data.leadLists.length).to.be.above(0);",
							"});"
						],
						"type": "text/javascript",
						"id": "bcf40f14-b55e-4df4-a0d1-e16528e79727"
					}
				}
			],
			"id": "1fec7509-42c9-41b7-b021-68cb22f3e4d0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\"searchText\": \"\", \"contentType\": \"ALL\"},\n  \"type\": \"DASHBOARD\",\n  \"pagination\": {\"pageSize\": 10, \"pageIndex\": 1}\n}"
				},
				"url": "{{base_url}}/customer-list/v1/lead-list/lead-lists"
			},
			"response": []
		},
		{
			"name": "Lead Lists - Invalid pageSize (0)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 or 422\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 422]);",
							"});",
							"pm.test(\"Response contains error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('message').that.is.a('string');",
							"});"
						],
						"type": "text/javascript",
						"id": "26a7a267-f45a-4310-9f6d-a88666825d4d"
					}
				}
			],
			"id": "837c7e5e-529e-44d0-9d6e-85fba4d28627",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\"searchText\": \"\", \"contentType\": \"ALL\"},\n  \"type\": \"DASHBOARD\",\n  \"pagination\": {\"pageSize\": 0, \"pageIndex\": 1}\n}"
				},
				"url": "{{base_url}}/customer-list/v1/lead-list/lead-lists"
			},
			"response": []
		},
		{
			"name": "Remove Account - Valid Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response statusCode is 200\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.status.statusCode).to.eql(200);",
							"});"
						],
						"type": "text/javascript",
						"id": "ad35c514-cfa1-42fb-8459-a70dc131464d"
					}
				}
			],
			"id": "42457a02-57cc-41df-aa59-4c1ca7f84745",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"id\": \"1197\",\n    \"guids\": [\"CDB2D3064C3B4CE7\"],\n    \"limits\": {\n      \"clientName\": \"GitHub\",\n      \"limitCounts\": 1,\n      \"type\": \"ACCOUNT\",\n      \"source\": \"REMOVE\"\n    }\n  }\n}"
				},
				"url": "{{base_url}}/customer-list/v1/account-list/account-delete"
			},
			"response": []
		},
		{
			"name": "Remove Account - Missing id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 or 422\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 422]);",
							"});",
							"pm.test(\"Response has error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('message').that.is.a('string');",
							"});"
						],
						"type": "text/javascript",
						"id": "8ea90174-fb6d-4ce2-9d72-4e7b2fe00457"
					}
				}
			],
			"id": "90d4686e-e00c-4892-af59-b612184b644e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"guids\": [\"CDB2D3064C3B4CE7\"],\n    \"limits\": {\n      \"clientName\": \"GitHub\",\n      \"limitCounts\": 1,\n      \"type\": \"ACCOUNT\",\n      \"source\": \"REMOVE\"\n    }\n  }\n}"
				},
				"url": "{{base_url}}/customer-list/v1/account-list/account-delete"
			},
			"response": []
		},
		{
			"name": "Track Account List – True",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('200 OK', () => pm.response.to.have.status(200));",
							"const j=pm.response.json();",
							"pm.test('Message includes tracked', () => pm.expect(j.status.message).to.include('tracked successfully'));",
							"pm.test('⏱ Response < 1000ms', () => pm.expect(pm.response.responseTime).to.be.below(1000));"
						],
						"type": "text/javascript",
						"id": "ffc13bbc-e8e7-4287-9970-9d61d87e67aa"
					}
				}
			],
			"id": "5b37fb1e-a646-452c-8594-310191fa095a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"data\":{\"id\":{{validAccountId}},\"isTrack\":\"true\"}}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-list/track-untrack-account-list"
			},
			"response": []
		},
		{
			"name": "Track Account List – False",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('200 OK', () => pm.response.to.have.status(200));",
							"pm.test('Message includes untracked', () => pm.expect(pm.response.json().status.message).to.include('untracked successfully'));",
							"pm.test('⏱ Response < 1000ms', () => pm.expect(pm.response.responseTime).to.be.below(1000));"
						],
						"type": "text/javascript",
						"id": "2713e6d7-5e7d-4eec-b978-ddf9928d5f85"
					}
				}
			],
			"id": "c082afc9-ad6f-4f1e-95b4-3c21fb598134",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"data\":{\"id\":{{validAccountId}},\"isTrack\":\"false\"}}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-list/track-untrack-account-list"
			},
			"response": []
		},
		{
			"name": "Account Save – Full Valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('200 OK', () => pm.response.to.have.status(200));",
							"const j=pm.response.json();",
							"pm.expect(j.data.status.statusCode).to.eql(200);",
							"pm.test('⏱ Response < 1000ms', () => pm.expect(pm.response.responseTime).to.be.below(1000));"
						],
						"type": "text/javascript",
						"id": "e65c635f-8520-417b-a8bb-46e0154837a3"
					}
				}
			],
			"id": "385243af-57c0-4227-a61c-c5f8a9117989",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"data\":[{\"id\":1041,\"listName\":\"frg\",\"guids\":[\"A\",\"B\"],\"type\":\"HANDPICKED\",\"isTrack\":\"false\",\"isDefaultTrack\":\"false\"},{\"id\":1197,\"listName\":\"Tracked\",\"guids\":[\"C\",\"D\"],\"type\":\"HANDPICKED\",\"isTrack\":\"false\",\"isDefaultTrack\":\"true\",\"limits\":{\"clientName\":\"GH\",\"limitCounts\":2,\"type\":\"ACCOUNT\",\"source\":\"DEDUCT\"}}]}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-list/account-list-save"
			},
			"response": []
		},
		{
			"name": "Fetch Limits – Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('200 OK', () => pm.response.to.have.status(200));",
							"const j=pm.response.json();",
							"pm.expect(j.data.data).to.have.all.keys('accountLimitRemaining','totalAccountLimit');",
							"pm.test('⏱ < 500ms', () => pm.expect(pm.response.responseTime).to.be.below(500));"
						],
						"type": "text/javascript",
						"id": "d829d901-b3b1-4f20-8130-1d38b5e95c1d"
					}
				}
			],
			"id": "02563399-8a87-4fa9-86cc-ed4e372c90bd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"clientName\":\"GitHub\",\"source\":\"FETCH\"}"
				},
				"url": "{{baseUrl}}/customer-list/v1/account-signal/fetch-limits"
			},
			"response": []
		},
		{
			"name": "Fetch Limits – No Body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('400 Bad Request', () => pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"id": "f72849d1-2beb-43f9-bf00-a2b7f34e7c0b"
					}
				}
			],
			"id": "311127b3-b7cb-48ff-ac3e-e5bf90b58c8c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{baseUrl}}/customer-list/v1/account-signal/fetch-limits"
			},
			"response": []
		},
		{
			"name": "Download Brief – Full Payload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('200 OK', () => pm.response.to.have.status(200));",
							"pm.test('⏱ < 2000ms', () => pm.expect(pm.response.responseTime).to.be.below(2000));"
						],
						"type": "text/javascript",
						"id": "f66ad07d-d5ab-4e92-9152-1ff96518468c"
					}
				}
			],
			"id": "97031c17-66c1-4c60-9939-90f01305d069",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"searchPayload\":{\"data\":{\"company_info\":{\"accountSignals\":{\"value\":1,\"signals\":[{\"id\":5,\"name\":\"Growth\",\"type\":\"INCLUDE\"}]}}},\"type\":\"ADVANCED_SEARCH_ACCOUNT\",\"pagination\":{\"page_size\":1,\"page_no\":1}},\"pushTask\":{\"downloadFormat\":\"CSV\",\"searchType\":\"Firmograph\",\"downloadType\":\"Single File\",\"requestDate\":\"2025-06-16T08:16:55.233Z\",\"taskName\":\"Test Export\",\"companyCount\":1,\"maxContactsPerCompany\":1,\"downloadAs\":\"Accounts\"}}"
				},
				"url": "{{baseUrl}}/customer-list/v2/bulk-download-save"
			},
			"response": []
		},
		{
			"name": "Get Spawn Names – Body Optional",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('200 OK', () => pm.response.to.have.status(200));",
							"pm.expect(pm.response.json().data).to.be.an('array');",
							"pm.test('⏱ < 500ms', () => pm.expect(pm.response.responseTime).to.be.below(500));"
						],
						"type": "text/javascript",
						"id": "b6c256ca-3656-402e-8d77-862294b72696"
					}
				}
			],
			"id": "81f0a8c8-6db7-4b2b-bd74-83e3c338cdd7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{baseUrl}}/search/v1/get-spawn-names"
			},
			"response": []
		},
		{
			"name": "Add Limits – Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('200 OK', () => pm.response.to.have.status(200));",
							"pm.expect(pm.response.json().status.message).to.include('updated successfully');",
							"pm.test('⏱ < 500ms', () => pm.expect(pm.response.responseTime).to.be.below(500));"
						],
						"type": "text/javascript",
						"id": "31b42827-d8e0-4a87-9bae-1f897b8708be"
					}
				}
			],
			"id": "2c37451d-5a61-4e97-9d6d-709f589fe51c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"clientName\":\"Gitlab\",\"access\":true,\"accountLimits\":20}"
				},
				"url": "{{baseUrl}}/v2/limits/add-limits"
			},
			"response": []
		},
		{
			"name": "Add Limits – Missing Field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('400 Bad Request', () => pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"id": "0666cb08-e75a-42b0-80f7-a02116670e53"
					}
				}
			],
			"id": "441f80a0-74ad-4898-ac57-04dac3156591",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"clientName\":\"Gitlab\",\"access\":true}"
				},
				"url": "{{baseUrl}}/v2/limits/add-limits"
			},
			"response": []
		},
		{
			"name": "Create Org – Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c15d2a6-5bd5-42ca-b3d1-1ef122adb000",
						"exec": [
							"pm.test('201 Created', () => pm.response.to.have.status(201));",
							"pm.test('⏱ < 1000ms', () => pm.expect(pm.response.responseTime).to.be.below(1000));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "c94afdb6-0f54-4048-b1b2-f5f4804788a9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJydWNoaXRhLmJoYW5kYXJlQHNtYXJ0ZWluYy5jb20iLCJ1c2VySWQiOjIsImNsaWVudElkIjoxLCJpc3MiOiJodHRwOi8vMTkyLjE2OC4xNS41OjgxMDAvL3YxL2FjY291bnRzL2xvZ2luIiwiaWF0IjoxNzUxNTIyNjE1LCJhdXRob3JpdGllcyI6WyJTdXBlciBBZG1pbiJdLCJwZXJtaXNzaW9ucyI6WyJFbWFpbCBJZCIsIkNSRUFURV9DTElFTlRfQUNDT1VOVCIsIlZJRVdfQ0xJRU5UX0FDQ09VTlQiXSwibGlzdE9mUHJvZHVjdHMiOlsiRW5yaWNoIE9uRGVtYW5kIl0sImV4cCI6MTc1MTUyNjIxNX0.yr5acFE5eaKf3HhLkZfFs0rULEgaJTqNFIvFNpwn4vc"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"adminEmail\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"adminFirstName\": \"vyankatesh\",\r\n    \"adminLastName\": \"Poojari\",\r\n    \"allowedroleid\": 9,\r\n    \"clientName\": \"shashank123\",\r\n    \"expiryDate\": \"2025-09-30T11:16:13.806Z\",\r\n    \"startDate\": \"2025-07-03T11:16:11.875Z\",\r\n    \"adminUsername\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"roleAssigned\": 8,\r\n    \"directDialAccess\": false,\r\n    \"emailRefresherAccess\": true,\r\n    \"clientType\": \"Regular\",\r\n    \"selectedProduct\": [\r\n        1,\r\n        2\r\n    ],\r\n    \"licenses\": [\r\n        {\r\n            \"licenseCount\": \"2\",\r\n            \"licenseTypeName\": \"Hunter\"\r\n        }\r\n    ],\r\n    \"subscriptionType\": \"Enterprise Standard\",\r\n    \"rateLimit\": 1,\r\n    \"accountLimit\": 10,\r\n    \"leadLimit\":2,\r\n    \"access\": true\r\n}"
				},
				"url": "https://qa-enrich.smarte.pro/userapi/v2/clients"
			},
			"response": []
		},
		{
			"name": "Create Org – Missing Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('400 Bad Request', () => pm.response.to.have.status(400));",
							"pm.test('Error code present', () => pm.expect(pm.response.json().status.statusCode).to.be.at.least(400));"
						],
						"type": "text/javascript",
						"id": "2c0e5d52-d78b-4d18-a030-5a143a421680"
					}
				}
			],
			"id": "b36d1174-3773-4af3-bf91-77edb7cbb5da",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"adminFirstName\":\"Test\"}"
				},
				"url": "{{baseUrl}}/v2/clients"
			},
			"response": []
		},
		{
			"name": "Update Org – Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c15d2a6-5bd5-42ca-b3d1-1ef122adb000",
						"exec": [
							"pm.test('201 Created', () => pm.response.to.have.status(201));",
							"pm.test('⏱ < 1000ms', () => pm.expect(pm.response.responseTime).to.be.below(1000));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "969cfa12-dbaf-4d55-a315-34bd721f8e4a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJydWNoaXRhLmJoYW5kYXJlQHNtYXJ0ZWluYy5jb20iLCJ1c2VySWQiOjIsImNsaWVudElkIjoxLCJpc3MiOiJodHRwOi8vMTkyLjE2OC4xNS41OjgxMDAvL3YxL2FjY291bnRzL2xvZ2luIiwiaWF0IjoxNzUxNTIyNjE1LCJhdXRob3JpdGllcyI6WyJTdXBlciBBZG1pbiJdLCJwZXJtaXNzaW9ucyI6WyJFbWFpbCBJZCIsIkNSRUFURV9DTElFTlRfQUNDT1VOVCIsIlZJRVdfQ0xJRU5UX0FDQ09VTlQiXSwibGlzdE9mUHJvZHVjdHMiOlsiRW5yaWNoIE9uRGVtYW5kIl0sImV4cCI6MTc1MTUyNjIxNX0.yr5acFE5eaKf3HhLkZfFs0rULEgaJTqNFIvFNpwn4vc"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"adminEmail\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"adminFirstName\": \"vyankatesh\",\r\n    \"adminLastName\": \"Poojari\",\r\n    \"allowedroleid\": 9,\r\n    \"clientName\": \"shashank123\",\r\n    \"expiryDate\": \"2025-09-30T11:16:13.806Z\",\r\n    \"startDate\": \"2025-07-03T11:16:11.875Z\",\r\n    \"adminUsername\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"roleAssigned\": 8,\r\n    \"directDialAccess\": false,\r\n    \"emailRefresherAccess\": true,\r\n    \"clientType\": \"Regular\",\r\n    \"selectedProduct\": [\r\n        1,\r\n        2\r\n    ],\r\n    \"licenses\": [\r\n        {\r\n            \"licenseCount\": \"2\",\r\n            \"licenseTypeName\": \"Hunter\"\r\n        }\r\n    ],\r\n    \"subscriptionType\": \"Enterprise Standard\",\r\n    \"rateLimit\": 1,\r\n    \"accountLimit\": 10,\r\n    \"leadLimit\":2,\r\n    \"access\": true\r\n}"
				},
				"url": "https://qa-enrich.smarte.pro/userapi/v2/clients/{clientId}"
			},
			"response": []
		},
		{
			"name": "Update Org – Missing Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2c0e5d52-d78b-4d18-a030-5a143a421680",
						"exec": [
							"pm.test('400 Bad Request', () => pm.response.to.have.status(400));",
							"pm.test('Error code present', () => pm.expect(pm.response.json().status.statusCode).to.be.at.least(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "f57f7de3-16d5-42df-9f69-43b72fb86fec",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"adminFirstName\":\"Test\"}"
				},
				"url": "https://qa-enrich.smarte.pro/userapi/v2/clients/{clientId}"
			},
			"response": []
		},
		{
			"name": "org create",
			"id": "a99abccb-3153-440d-b4c6-37a1e8c39109",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJydWNoaXRhLmJoYW5kYXJlQHNtYXJ0ZWluYy5jb20iLCJ1c2VySWQiOjIsImNsaWVudElkIjoxLCJpc3MiOiJodHRwOi8vMTkyLjE2OC4xNS41OjgxMDAvdjEvYWNjb3VudHMvbG9naW4iLCJpYXQiOjE3NTE1MjUyNTAsImF1dGhvcml0aWVzIjpbIlN1cGVyIEFkbWluIl0sInBlcm1pc3Npb25zIjpbIkVtYWlsIElkIiwiQ1JFQVRFX0NMSUVOVF9BQ0NPVU5UIiwiVklFV19DTElFTlRfQUNDT1VOVCJdLCJsaXN0T2ZQcm9kdWN0cyI6WyJFbnJpY2ggT25EZW1hbmQiXSwiZXhwIjoxNzUxNTI4ODUwfQ.wjTfBNpZm2MhQwdGo89KIg66iuOz4R5_ftJWxbjQU-E"
					}
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJydWNoaXRhLmJoYW5kYXJlQHNtYXJ0ZWluYy5jb20iLCJ1c2VySWQiOjIsImNsaWVudElkIjoxLCJpc3MiOiJodHRwOi8vMTkyLjE2OC4xNS41OjgxMDAvdjEvYWNjb3VudHMvbG9naW4iLCJpYXQiOjE3NTE1MjUyNTAsImF1dGhvcml0aWVzIjpbIlN1cGVyIEFkbWluIl0sInBlcm1pc3Npb25zIjpbIkVtYWlsIElkIiwiQ1JFQVRFX0NMSUVOVF9BQ0NPVU5UIiwiVklFV19DTElFTlRfQUNDT1VOVCJdLCJsaXN0T2ZQcm9kdWN0cyI6WyJFbnJpY2ggT25EZW1hbmQiXSwiZXhwIjoxNzUxNTI4ODUwfQ.wjTfBNpZm2MhQwdGo89KIg66iuOz4R5_ftJWxbjQU-E",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"adminEmail\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"adminFirstName\": \"vyankatesh\",\r\n    \"adminLastName\": \"Poojari\",\r\n    \"allowedroleid\": 9,\r\n    \"clientName\": \"shashank12\",\r\n    \"expiryDate\": \"2025-07-30T11:16:13.806Z\",\r\n    \"startDate\": \"2025-07-02T11:16:11.875Z\",\r\n    \"adminUsername\": \"vyankatesh.poojari@smarte.pro\",\r\n    \"roleAssigned\": 8,\r\n    \"directDialAccess\": false,\r\n    \"emailRefresherAccess\": true,\r\n    \"clientType\": \"Regular\",\r\n    \"selectedProduct\": [\r\n        1,\r\n        2\r\n    ],\r\n    \"licenses\": [\r\n        {\r\n            \"licenseCount\": \"2\",\r\n            \"licenseTypeName\": \"Hunter\"\r\n        }\r\n    ],\r\n    \"subscriptionType\": \"Enterprise Standard\",\r\n    \"rateLimit\": 1,\r\n    \"accountLimit\": 10,\r\n    \"leadLimit\":2,\r\n    \"access\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://192.168.15.5:8100/v2/clients",
				"description": "Generated from cURL: curl --location 'http://192.168.15.5.8100/v2/clients' \\ --header 'Content-Type: application/json' \\ --header 'authorization: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJydWNoaXRhLmJoYW5kYXJlQHNtYXJ0ZWluYy5jb20iLCJ1c2VySWQiOjIsImNsaWVudElkIjoxLCJpc3MiOiJodHRwOi8vMTkyLjE2OC4xNS41OjgxMDAvL3YxL2FjY291bnRzL2xvZ2luIiwiaWF0IjoxNzUxNTIyNjE1LCJhdXRob3JpdGllcyI6WyJTdXBlciBBZG1pbiJdLCJwZXJtaXNzaW9ucyI6WyJFbWFpbCBJZCIsIkNSRUFURV9DTElFTlRfQUNDT1VOVCIsIlZJRVdfQ0xJRU5UX0FDQ09VTlQiXSwibGlzdE9mUHJvZHVjdHMiOlsiRW5yaWNoIE9uRGVtYW5kIl0sImV4cCI6MTc1MTUyNjIxNX0.yr5acFE5eaKf3HhLkZfFs0rULEgaJTqNFIvFNpwn4vc' \\ --data-raw '{ \"adminEmail\": \"vyankatesh.poojari@smarte.pro\", \"adminFirstName\": \"vyankatesh\", \"adminLastName\": \"Poojari\", \"allowedroleid\": 9, \"clientName\": \"shashank123\", \"expiryDate\": \"2025-09-30T11:16:13.806Z\", \"startDate\": \"2025-07-03T11:16:11.875Z\", \"adminUsername\": \"vyankatesh.poojari@smarte.pro\", \"roleAssigned\": 8, \"directDialAccess\": false, \"emailRefresherAccess\": true, \"clientType\": \"Regular\", \"selectedProduct\": [ 1, 2 ], \"licenses\": [ { \"licenseCount\": \"2\", \"licenseTypeName\": \"Hunter\" } ], \"subscriptionType\": \"Enterprise Standard\", \"rateLimit\": 1, \"accountLimit\": 10, \"leadLimit\":2, \"access\": true }'"
			},
			"response": []
		},
		{
			"name": "Download Lead File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 2 seconds\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Response contains statusCode 200\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status.statusCode).to.eql(200);",
							"});",
							"",
							"pm.test(\"Response message is Success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status.message).to.eql(\"Success\");",
							"});",
							"",
							"pm.test(\"File path format is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.match(/\\/opt\\/smarte\\/App\\/LeadUploads\\/leadsamplefile_\\d+_\\d{14}\\.csv/);",
							"});"
						],
						"type": "text/javascript",
						"id": "56c36c2a-0d24-4b6f-9c7f-479e52240263"
					}
				}
			],
			"id": "845a4050-940f-48d1-ba0f-3432ad9a00a8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"url": "https://qc3-apigateway.smarte.pro/customer-list/v1/lead-list/downloadLeadFile"
			},
			"response": [
				{
					"id": "ea1b69de-5aad-49cb-b332-ab1811e7cfa0",
					"name": "Valid Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": "https://qc3-apigateway.smarte.pro/customer-list/v1/lead-list/downloadLeadFile"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"responseTime": null,
					"body": "{\"status\": {\"statusCode\": 200, \"requestId\": \"17872c55-4d3b-4310-ad3b-b461d5d65152\", \"message\": \"Success\"}, \"data\": \"/opt/smarte/App/LeadUploads/leadsamplefile_1_20250526044151.csv\"}"
				}
			]
		},
		{
			"name": "Download Account File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 2 seconds\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Response contains statusCode 200\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status.statusCode).to.eql(200);",
							"});",
							"",
							"pm.test(\"Response message is Success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status.message).to.eql(\"Success\");",
							"});",
							"",
							"pm.test(\"File path format is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.match(/\\/opt\\/smarte\\/App\\/AccountUploads\\/accountsamplefile_\\d+_\\d{14}\\.csv/);",
							"});"
						],
						"type": "text/javascript",
						"id": "e18c72a7-6cf1-4d74-9b20-82c4c4c66bb3"
					}
				}
			],
			"id": "0ef8cc73-7b23-4285-b77e-b52952eba4e8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authorization",
						"value": "{{auth_token}}"
					}
				],
				"url": "https://qc3-apigateway.smarte.pro/customer-list/v1/account-list/downloadAccountFile"
			},
			"response": [
				{
					"id": "5c92bf29-6a38-4ab0-bce5-2e2ae0f86e0a",
					"name": "Valid Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": "https://qc3-apigateway.smarte.pro/customer-list/v1/account-list/downloadAccountFile"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"responseTime": null,
					"body": "{\"status\": {\"statusCode\": 200, \"requestId\": \"17872c55-4d3b-4310-ad3b-b461d5d65152\", \"message\": \"Success\"}, \"data\": \"/opt/smarte/App/AccountUploads/accountsamplefile_1_20250526044151.csv\"}"
				}
			]
		},
		{
			"name": "http://192.168.15.5.8100/v2/clients",
			"id": "239be587-2112-422b-b781-6194168365bc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://192.168.15.5.8100/v2/clients",
				"description": "Generated from cURL: curl --location 'http://192.168.15.5.8100/v2/clients' \\ --header 'Content-Type: application/json' \\ --header 'authorization: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJydWNoaXRhLmJoYW5kYXJlQHNtYXJ0ZWluYy5jb20iLCJ1c2VySWQiOjIsImNsaWVudElkIjoxLCJpc3MiOiJodHRwOi8vMTkyLjE2OC4xNS41OjgxMDAvL3YxL2FjY291bnRzL2xvZ2luIiwiaWF0IjoxNzUxNTIyNjE1LCJhdXRob3JpdGllcyI6WyJTdXBlciBBZG1pbiJdLCJwZXJtaXNzaW9ucyI6WyJFbWFpbCBJZCIsIkNSRUFURV9DTElFTlRfQUNDT1VOVCIsIlZJRVdfQ0xJRU5UX0FDQ09VTlQiXSwibGlzdE9mUHJvZHVjdHMiOlsiRW5yaWNoIE9uRGVtYW5kIl0sImV4cCI6MTc1MTUyNjIxNX0.yr5acFE5eaKf3HhLkZfFs0rULEgaJTqNFIvFNpwn4vc' \\ --data-raw '{ \"adminEmail\": \"vyankatesh.poojari@smarte.pro\", \"adminFirstName\": \"vyankatesh\", \"adminLastName\": \"Poojari\", \"allowedroleid\": 9, \"clientName\": \"shashank123\", \"expiryDate\": \"2025-09-30T11:16:13.806Z\", \"startDate\": \"2025-07-03T11:16:11.875Z\", \"adminUsername\": \"vyankatesh.poojari@smarte.pro\", \"roleAssigned\": 8, \"directDialAccess\": false, \"emailRefresherAccess\": true, \"clientType\": \"Regular\", \"selectedProduct\": [ 1, 2 ], \"licenses\": [ { \"licenseCount\": \"2\", \"licenseTypeName\": \"Hunter\" } ], \"subscriptionType\": \"Enterprise Standard\", \"rateLimit\": 1, \"accountLimit\": 10, \"leadLimit\":2, \"access\": true }'"
			},
			"response": []
		}
	]
}